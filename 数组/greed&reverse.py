# 贪心思想，如何才是最优？
# 题1：
# 给你一个下标从 0 开始、由正整数组成的数组 nums 。
# 你可以在数组上执行下述操作 任意 次：
#   选中一个同时满足 0 <= i < nums.length - 1 和 nums[i] <= nums[i + 1] 的整数 i 。
#   将元素 nums[i + 1] 替换为 nums[i] + nums[i + 1] ，并从数组中删除元素 nums[i] 。
# 返回你可以从最终数组中获得的 最大 元素的值。

# 输入：nums = [2,3,7,9,3]

# 输入：nums = [5,3,3]

# 分析：
# [2,3,7,9,3]
# 若正序遍历，2+3=5+7=12，12大于9，即最大只限于12
# [5,3,3]
# 若正序遍历，3+3=6，6即为最大
# 若正序遍历，会遇到上述情况，或组合情况
# 若正序sum，会遇到 只取到各部分的最大，即[7, 12] 这里还能加起来

# 逆序遍历：
# [2,3,7,9,3]，9+7+3+2=21，nums[0]=21
# [5,3,3]，3+3=6，nums[1]=6，6+5=11，nums[0]=11
# 总是将相加后的值替换到前面即可，nums[1]=nums[2]+nums[1]
# 即便[1,2,3,17,10]，10小于17，最后相加后总是nums[0]最大（10即为相加后的结果）
